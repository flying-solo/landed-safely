/*
 *  * @author kaboel
 *  * Muhammad Faiq Allam | faiq.kaboel@gmail.com
 */
package lds.main;

import java.awt.event.ItemEvent;
import java.awt.event.ItemListener;
import javax.swing.JDialog;
import javax.swing.JOptionPane;
import lds.lib.Controllers.AreaController;
import lds.lib.Controllers.CirController;
import lds.lib.Controllers.DisController;
import lds.lib.Controllers.ProvController;
import lds.lib.Entities.CityRegency;
import lds.lib.Entities.District;
import lds.lib.Entities.Province;
import lds.lib.Frames.AddAreaFrm;
import lds.lib.Frames.UpdAreaFrm;
import lds.lib.Libs.Print;
import lds.lib.Models.tableModels.AreaGridModel;

/**
 *
 * @author kaboel
 */
public class AreaFrm extends javax.swing.JInternalFrame {
    
    private final MainFrm main = new MainFrm();
    private final AreaGridModel gridModel;
    private final AreaController areacon;
    private final ProvController provcon;
    private final CirController circon;
    private final DisController discon;
    
    private Print print;
    private JDialog dialog;
    
    public AreaFrm() {
        this.discon = new DisController();
        this.circon = new CirController();
        this.provcon = new ProvController();
        this.areacon = new AreaController();
        this.gridModel = new AreaGridModel(areacon.getAllArea());
        
        initComponents();
        
    }
    
    private void loadComboProv() {
        this.provcon.getAllProv().forEach((prov) -> {
            this.comboProv.addItem(prov);
        });
    }
    
    private void loadComboCir() {
//        if(this.comboProv.isEnabled() && this.comboProv.getSelectedItem() != null) {
//            this.comboCir.setEnabled(true);
//            Province prov = (Province) this.comboProv.getSelectedItem();
            this.circon.getAllCir().forEach((cir) -> {
                this.comboCir.addItem(cir);
            });
//            this.comboCir.addItemListener(new ItemListener() {
//                @Override
//                public void itemStateChanged(ItemEvent ie) {
//                    loadComboDis();
//                }
//            });
//        }
    }
    
    private void loadComboDis() {
//        if(this.comboCir.isEnabled() && this.comboProv.getSelectedItem() != null) {
//            this.comboDis.setEnabled(true);
//           CityRegency cir = (CityRegency) this.comboCir.getSelectedItem();
            this.discon.getAllDis().forEach((dis) -> {
                this.comboDis.addItem(dis);
            });
//        }
    }
    
    private void setDataNotif(int count) {
        if(count == 0) {
            this.dataNotif.setText("No data found.");
        } else {
            this.dataNotif.setText("Found "+ count +" rows.");
        }
    }
    
    private String getSelectedId() {
        String id = (String) this.gridModel.getValueAt(this.areaDataGrid.getSelectedRow(), 0);
        return id;
    }
    
    private void setDialog(JDialog dialog) {
        this.dialog = dialog;
        this.dialog.setLocationRelativeTo(null);
        this.dialog.setResizable(false);
        this.dialog.setVisible(true);
    }
    
    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jLabel1 = new javax.swing.JLabel();
        comboProv = new javax.swing.JComboBox<Province>();
        comboCir = new javax.swing.JComboBox<CityRegency>();
        jLabel2 = new javax.swing.JLabel();
        comboDis = new javax.swing.JComboBox<District>();
        jLabel3 = new javax.swing.JLabel();
        jSeparator1 = new javax.swing.JSeparator();
        jPanel1 = new javax.swing.JPanel();
        btnReset = new javax.swing.JButton();
        btnFilter = new javax.swing.JButton();
        btnAddNew = new javax.swing.JButton();
        btnPrntXLS = new javax.swing.JButton();
        btnPrntPDF = new javax.swing.JButton();
        jScrollPane1 = new javax.swing.JScrollPane();
        areaDataGrid = new javax.swing.JTable();
        btnDeleteSel = new javax.swing.JButton();
        btnChangeStat = new javax.swing.JButton();
        dataNotif = new javax.swing.JLabel();
        checkBox = new javax.swing.JCheckBox();

        setClosable(true);
        setIconifiable(true);
        setMaximizable(true);
        setResizable(true);
        setTitle("Area");

        jLabel1.setFont(new java.awt.Font("Ubuntu", 0, 12)); // NOI18N
        jLabel1.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
        jLabel1.setText("Province");

        comboProv.setEnabled(false);

        comboCir.setEnabled(false);

        jLabel2.setFont(new java.awt.Font("Ubuntu", 0, 12)); // NOI18N
        jLabel2.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
        jLabel2.setText("City / Region");

        comboDis.setEnabled(false);

        jLabel3.setFont(new java.awt.Font("Ubuntu", 0, 12)); // NOI18N
        jLabel3.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
        jLabel3.setText("District");

        btnReset.setFont(new java.awt.Font("Ubuntu", 1, 12)); // NOI18N
        btnReset.setText("Reset");
        btnReset.setPreferredSize(new java.awt.Dimension(100, 30));
        btnReset.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnResetActionPerformed(evt);
            }
        });

        btnFilter.setFont(new java.awt.Font("Ubuntu", 1, 12)); // NOI18N
        btnFilter.setText("Filter");
        btnFilter.setPreferredSize(new java.awt.Dimension(100, 30));
        btnFilter.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnFilterActionPerformed(evt);
            }
        });

        btnAddNew.setFont(new java.awt.Font("Ubuntu", 1, 12)); // NOI18N
        btnAddNew.setText("+ Add New");
        btnAddNew.setPreferredSize(new java.awt.Dimension(100, 30));
        btnAddNew.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnAddNewActionPerformed(evt);
            }
        });

        btnPrntXLS.setFont(new java.awt.Font("Ubuntu", 1, 12)); // NOI18N
        btnPrntXLS.setText("Export .xls");
        btnPrntXLS.setPreferredSize(new java.awt.Dimension(100, 30));
        btnPrntXLS.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnPrntXLSActionPerformed(evt);
            }
        });

        btnPrntPDF.setFont(new java.awt.Font("Ubuntu", 1, 12)); // NOI18N
        btnPrntPDF.setText("Export .pdf");
        btnPrntPDF.setPreferredSize(new java.awt.Dimension(100, 30));
        btnPrntPDF.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnPrntPDFActionPerformed(evt);
            }
        });

        areaDataGrid.setModel(this.gridModel);
        areaDataGrid.setSelectionMode(javax.swing.ListSelectionModel.SINGLE_SELECTION);
        jScrollPane1.setViewportView(areaDataGrid);

        btnDeleteSel.setFont(new java.awt.Font("Ubuntu", 1, 12)); // NOI18N
        btnDeleteSel.setText("Delete Selected");
        btnDeleteSel.setPreferredSize(new java.awt.Dimension(122, 30));
        btnDeleteSel.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnDeleteSelActionPerformed(evt);
            }
        });

        btnChangeStat.setFont(new java.awt.Font("Ubuntu", 1, 12)); // NOI18N
        btnChangeStat.setText("Change Detail");
        btnChangeStat.setPreferredSize(new java.awt.Dimension(122, 30));
        btnChangeStat.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnChangeStatActionPerformed(evt);
            }
        });

        dataNotif.setFont(new java.awt.Font("Ubuntu", 1, 14)); // NOI18N
        dataNotif.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        dataNotif.setText("No data found.");

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jScrollPane1)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                        .addComponent(btnReset, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(btnFilter, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(dataNotif, javax.swing.GroupLayout.DEFAULT_SIZE, 332, Short.MAX_VALUE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(btnAddNew, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(btnPrntXLS, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(btnPrntPDF, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                        .addGap(0, 0, Short.MAX_VALUE)
                        .addComponent(btnChangeStat, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(btnDeleteSel, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap())
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(btnReset, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(btnFilter, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(dataNotif))
                    .addComponent(btnAddNew, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(btnPrntXLS, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(btnPrntPDF, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 264, Short.MAX_VALUE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(btnDeleteSel, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(btnChangeStat, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(12, 12, 12))
        );

        checkBox.setPreferredSize(new java.awt.Dimension(25, 25));
        checkBox.addItemListener(new java.awt.event.ItemListener() {
            public void itemStateChanged(java.awt.event.ItemEvent evt) {
                checkBoxItemStateChanged(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jSeparator1)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(jLabel3, javax.swing.GroupLayout.PREFERRED_SIZE, 116, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(comboDis, javax.swing.GroupLayout.PREFERRED_SIZE, 250, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(jLabel2, javax.swing.GroupLayout.PREFERRED_SIZE, 116, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(comboCir, javax.swing.GroupLayout.PREFERRED_SIZE, 250, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 116, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(comboProv, javax.swing.GroupLayout.PREFERRED_SIZE, 250, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(checkBox, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                        .addGap(0, 0, Short.MAX_VALUE)))
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(jLabel1)
                        .addComponent(comboProv, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addComponent(checkBox, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel2)
                    .addComponent(comboCir, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel3)
                    .addComponent(comboDis, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addComponent(jSeparator1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addContainerGap())
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void btnResetActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnResetActionPerformed
        this.checkBox.setSelected(false);
    }//GEN-LAST:event_btnResetActionPerformed

    private void btnFilterActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnFilterActionPerformed
        Province prov = (Province) this.comboProv.getSelectedItem();
        CityRegency cir = (CityRegency) this.comboCir.getSelectedItem();
        District dis = (District) this.comboDis.getSelectedItem();
        if(this.checkBox.isSelected() && prov != null && cir != null && dis != null) {
            this.gridModel.setData(this.areacon.getAreaByParam(prov, cir, dis));
        } else {
            this.gridModel.setData(this.areacon.getAllArea());
        }
        this.gridModel.fireTableDataChanged();
    }//GEN-LAST:event_btnFilterActionPerformed

    private void btnAddNewActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnAddNewActionPerformed
        AddAreaFrm frm = new AddAreaFrm(this.main, true);
        this.setDialog(frm);
        this.btnFilterActionPerformed(evt);
    }//GEN-LAST:event_btnAddNewActionPerformed

    private void btnPrntXLSActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnPrntXLSActionPerformed
        this.print = new Print("Area");
        this.print.printXLS(this.areaDataGrid);
    }//GEN-LAST:event_btnPrntXLSActionPerformed

    private void btnPrntPDFActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnPrntPDFActionPerformed
        this.print = new Print("Area");
        this.print.printPDF(this.areaDataGrid);
    }//GEN-LAST:event_btnPrntPDFActionPerformed

    private void btnDeleteSelActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnDeleteSelActionPerformed
        StringBuilder sb = new StringBuilder();
        String ttl = "";
        int type = 0;
        if(this.areaDataGrid.getSelectedRow()<0) {
            sb.append("Theres no data selected !");
            ttl = "LDS : Warning";
            type = JOptionPane.WARNING_MESSAGE;
        } else {
            int i = this.main.confPrompt("Are you sure you want to delete this area?");
            if(i == JOptionPane.YES_OPTION) {
                if(this.areacon.deleteArea(this.getSelectedId())) {
                    sb.append("Selected area deleted !");
                    type = JOptionPane.INFORMATION_MESSAGE;
                    ttl = "LDS : Information";
                } else {
                    sb.append("Unable to delete selected area.");
                    type = JOptionPane.ERROR_MESSAGE;
                    ttl = "LDS : Error";
                }
                this.btnFilterActionPerformed(evt);
            }
        }
        this.main.userDialog(sb, ttl, type);
    }//GEN-LAST:event_btnDeleteSelActionPerformed

    private void btnChangeStatActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnChangeStatActionPerformed
        if(this.areaDataGrid.getSelectedRow()<0) {
            StringBuilder sb = new StringBuilder();
            String ttl;
            int type;
            sb.append("Theres no data selected !");
            ttl = "LDS : Warning";
            type = JOptionPane.WARNING_MESSAGE;
            this.main.userDialog(sb, ttl, type);
        } else {
            UpdAreaFrm frm = new UpdAreaFrm(this.main, true, this.getSelectedId());
            this.setDialog(frm);
            this.btnFilterActionPerformed(evt);
        }
    }//GEN-LAST:event_btnChangeStatActionPerformed

    private void checkBoxItemStateChanged(java.awt.event.ItemEvent evt) {//GEN-FIRST:event_checkBoxItemStateChanged
        if(evt.getStateChange() == ItemEvent.SELECTED) {
            this.comboProv.setEnabled(true);
            this.comboCir.setEnabled(true);
            this.comboDis.setEnabled(true);
            loadComboProv();
            loadComboCir();
            loadComboDis();
            
        } else {
            this.comboProv.setEnabled(false);
            this.comboCir.setEnabled(false);
            this.comboDis.setEnabled(false);
            
            this.comboProv.removeAllItems();
            this.comboDis.removeAllItems();
            this.comboCir.removeAllItems();
        }
    }//GEN-LAST:event_checkBoxItemStateChanged

    
    
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JTable areaDataGrid;
    private javax.swing.JButton btnAddNew;
    private javax.swing.JButton btnChangeStat;
    private javax.swing.JButton btnDeleteSel;
    private javax.swing.JButton btnFilter;
    private javax.swing.JButton btnPrntPDF;
    private javax.swing.JButton btnPrntXLS;
    private javax.swing.JButton btnReset;
    private javax.swing.JCheckBox checkBox;
    private javax.swing.JComboBox<CityRegency> comboCir;
    private javax.swing.JComboBox<District> comboDis;
    private javax.swing.JComboBox<Province> comboProv;
    private javax.swing.JLabel dataNotif;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JSeparator jSeparator1;
    // End of variables declaration//GEN-END:variables
}
