/*
 *  * @author kaboel
 *  * Muhammad Faiq Allam | faiq.kaboel@gmail.com
 */
package lds.main.Internals;

import java.awt.event.ItemEvent;
import javax.swing.JDialog;
import javax.swing.JOptionPane;
import lds.lib.Controllers.AdminController;
import lds.lib.Frames.AddEmpFrm;
import lds.lib.Controllers.EmpController;
import lds.lib.Frames.AddAdmFrm;
import lds.lib.Libs.Print;
import lds.lib.Models.tables.EmpGridModel;
import lds.main.MainFrm;

/**
 *
 * @author kaboel
 */
public class EmpFrm extends javax.swing.JInternalFrame {
    
    private final MainFrm main;
    private final EmpGridModel gridModel;
    private final EmpController empcon;
    private final AdminController admcon;
    
    private JDialog dialog;
    private Print print;
    
    public EmpFrm() {
        this.main = new MainFrm();
        this.empcon = new EmpController();
        this.admcon = new AdminController();
        this.gridModel = new EmpGridModel(empcon.getAllEmp());
        
        initComponents();
        
        this.setDataNotif(this.gridModel.getRowCount());
    }
    
    private boolean isCleared() {
        return (this.radGroup.getSelection() == null);
    }
    
    private String getSelectedId() {
        String id = this.gridModel.getValueAt(empDataGrid.getSelectedRow(), 8).toString();
        return id;
    }
    
    private String getSelectedAdmin() {
        String id = this.gridModel.getValueAt(empDataGrid.getSelectedRow(), 9).toString();
        return id;
    }
    
    private void setDataNotif(int count) {
        if(count == 0) {
            this.dataNotif.setText("No data found.");
        } else {
            this.dataNotif.setText("Found "+ count +" rows.");
        }
    }
    
    private void setDialog(JDialog dialog) {
        this.dialog = dialog;
        this.dialog.setLocationRelativeTo(null);
        this.dialog.setResizable(false);
        this.dialog.setVisible(true);
    }
    
    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        radGroup = new javax.swing.ButtonGroup();
        jPanel1 = new javax.swing.JPanel();
        btnPrntPdf = new javax.swing.JButton();
        btnPrntXls = new javax.swing.JButton();
        btnAdd = new javax.swing.JButton();
        btnFilter = new javax.swing.JButton();
        jScrollPane1 = new javax.swing.JScrollPane();
        empDataGrid = new javax.swing.JTable(this.gridModel);
        btnDeleteRow = new javax.swing.JButton();
        btnChangeStat = new javax.swing.JButton();
        btnReset = new javax.swing.JButton();
        dataNotif = new javax.swing.JLabel();
        btnChangePos = new javax.swing.JButton();
        comboNewPosition = new javax.swing.JComboBox<>();
        btnMkAdmin = new javax.swing.JButton();
        jLabel9 = new javax.swing.JLabel();
        txtName = new javax.swing.JTextField();
        comboPosition = new javax.swing.JComboBox<>();
        jLabel10 = new javax.swing.JLabel();
        comboStatus = new javax.swing.JComboBox<>();
        jLabel11 = new javax.swing.JLabel();
        jSeparator1 = new javax.swing.JSeparator();
        radName = new javax.swing.JRadioButton();
        radPosition = new javax.swing.JRadioButton();
        radStatus = new javax.swing.JRadioButton();

        setClosable(true);
        setIconifiable(true);
        setMaximizable(true);
        setTitle("Employee");

        btnPrntPdf.setFont(new java.awt.Font("Ubuntu", 1, 12)); // NOI18N
        btnPrntPdf.setText("Print .pdf");
        btnPrntPdf.setPreferredSize(new java.awt.Dimension(100, 30));
        btnPrntPdf.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnPrntPdfActionPerformed(evt);
            }
        });

        btnPrntXls.setFont(new java.awt.Font("Ubuntu", 1, 12)); // NOI18N
        btnPrntXls.setText("Print .xls");
        btnPrntXls.setPreferredSize(new java.awt.Dimension(100, 30));
        btnPrntXls.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnPrntXlsActionPerformed(evt);
            }
        });

        btnAdd.setFont(new java.awt.Font("Ubuntu", 1, 12)); // NOI18N
        btnAdd.setText("+ Add New");
        btnAdd.setPreferredSize(new java.awt.Dimension(100, 30));
        btnAdd.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnAddActionPerformed(evt);
            }
        });

        btnFilter.setFont(new java.awt.Font("Ubuntu", 1, 12)); // NOI18N
        btnFilter.setText("FIlter");
        btnFilter.setPreferredSize(new java.awt.Dimension(100, 30));
        btnFilter.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnFilterActionPerformed(evt);
            }
        });

        empDataGrid.setModel(this.gridModel);
        empDataGrid.setSelectionMode(javax.swing.ListSelectionModel.SINGLE_SELECTION);
        jScrollPane1.setViewportView(empDataGrid);

        btnDeleteRow.setFont(new java.awt.Font("Ubuntu", 1, 12)); // NOI18N
        btnDeleteRow.setText("Delete Selected");
        btnDeleteRow.setPreferredSize(new java.awt.Dimension(130, 30));
        btnDeleteRow.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnDeleteRowActionPerformed(evt);
            }
        });

        btnChangeStat.setFont(new java.awt.Font("Ubuntu", 1, 12)); // NOI18N
        btnChangeStat.setText("Change Status");
        btnChangeStat.setPreferredSize(new java.awt.Dimension(130, 30));
        btnChangeStat.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnChangeStatActionPerformed(evt);
            }
        });

        btnReset.setFont(new java.awt.Font("Ubuntu", 1, 12)); // NOI18N
        btnReset.setText("Reset");
        btnReset.setPreferredSize(new java.awt.Dimension(100, 30));
        btnReset.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnResetActionPerformed(evt);
            }
        });

        dataNotif.setFont(new java.awt.Font("Ubuntu", 1, 14)); // NOI18N
        dataNotif.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        dataNotif.setText("jlabel");

        btnChangePos.setFont(new java.awt.Font("Ubuntu", 1, 12)); // NOI18N
        btnChangePos.setText("Change Position");
        btnChangePos.setPreferredSize(new java.awt.Dimension(130, 30));
        btnChangePos.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnChangePosActionPerformed(evt);
            }
        });

        comboNewPosition.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Not positioned yet", "Courier", "Staff", "Supervisor" }));

        btnMkAdmin.setFont(new java.awt.Font("Ubuntu", 1, 12)); // NOI18N
        btnMkAdmin.setText("Make Admin");
        btnMkAdmin.setPreferredSize(new java.awt.Dimension(130, 30));
        btnMkAdmin.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnMkAdminActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(jScrollPane1, javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addComponent(comboNewPosition, javax.swing.GroupLayout.PREFERRED_SIZE, 168, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(btnChangePos, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(btnMkAdmin, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(btnChangeStat, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(btnDeleteRow, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addComponent(btnReset, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(btnFilter, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addComponent(dataNotif, javax.swing.GroupLayout.DEFAULT_SIZE, 320, Short.MAX_VALUE)
                        .addGap(18, 18, 18)
                        .addComponent(btnAdd, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(btnPrntXls, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(btnPrntPdf, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap())
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(btnPrntPdf, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(btnPrntXls, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(btnAdd, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(btnFilter, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(btnReset, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(dataNotif)))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 263, Short.MAX_VALUE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(btnDeleteRow, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(btnChangeStat, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(btnChangePos, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(comboNewPosition, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(btnMkAdmin, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addGap(12, 12, 12))
        );

        jLabel9.setFont(new java.awt.Font("Ubuntu", 0, 12)); // NOI18N
        jLabel9.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
        jLabel9.setText("Employee Name");

        txtName.setEnabled(false);

        comboPosition.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Not positioned yet", "Courier", "Staff", "Supervisor" }));
        comboPosition.setEnabled(false);

        jLabel10.setFont(new java.awt.Font("Ubuntu", 0, 12)); // NOI18N
        jLabel10.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
        jLabel10.setText("Job Position");

        comboStatus.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Non-Active", "Active" }));
        comboStatus.setEnabled(false);

        jLabel11.setFont(new java.awt.Font("Ubuntu", 0, 12)); // NOI18N
        jLabel11.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
        jLabel11.setText("Status");

        radGroup.add(radName);
        radName.setPreferredSize(new java.awt.Dimension(25, 25));
        radName.addItemListener(new java.awt.event.ItemListener() {
            public void itemStateChanged(java.awt.event.ItemEvent evt) {
                radNameItemStateChanged(evt);
            }
        });

        radGroup.add(radPosition);
        radPosition.setPreferredSize(new java.awt.Dimension(25, 25));
        radPosition.addItemListener(new java.awt.event.ItemListener() {
            public void itemStateChanged(java.awt.event.ItemEvent evt) {
                radPositionItemStateChanged(evt);
            }
        });

        radGroup.add(radStatus);
        radStatus.setPreferredSize(new java.awt.Dimension(25, 25));
        radStatus.addItemListener(new java.awt.event.ItemListener() {
            public void itemStateChanged(java.awt.event.ItemEvent evt) {
                radStatusItemStateChanged(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel9, javax.swing.GroupLayout.PREFERRED_SIZE, 116, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel10, javax.swing.GroupLayout.PREFERRED_SIZE, 116, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel11, javax.swing.GroupLayout.PREFERRED_SIZE, 116, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(comboPosition, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(txtName)
                            .addComponent(comboStatus, 0, 250, Short.MAX_VALUE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(radName, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(radPosition, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(radStatus, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(0, 477, Short.MAX_VALUE)))
                .addContainerGap())
            .addComponent(jSeparator1)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(jLabel9)
                        .addComponent(txtName, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addComponent(radName, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(comboPosition, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(jLabel10))
                    .addComponent(radPosition, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(comboStatus, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(jLabel11))
                    .addComponent(radStatus, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addComponent(jSeparator1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addContainerGap())
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void radNameItemStateChanged(java.awt.event.ItemEvent evt) {//GEN-FIRST:event_radNameItemStateChanged
        if(evt.getStateChange() == ItemEvent.SELECTED) {
            this.txtName.setEnabled(true);
        } else if(evt.getStateChange() == ItemEvent.DESELECTED) {
            this.txtName.setEnabled(false);
        }
    }//GEN-LAST:event_radNameItemStateChanged

    private void radPositionItemStateChanged(java.awt.event.ItemEvent evt) {//GEN-FIRST:event_radPositionItemStateChanged
        if(evt.getStateChange() == ItemEvent.SELECTED) {
            this.comboPosition.setEnabled(true);
        } else if(evt.getStateChange() == ItemEvent.DESELECTED) {
            this.comboPosition.setEnabled(false);
        }
    }//GEN-LAST:event_radPositionItemStateChanged

    private void radStatusItemStateChanged(java.awt.event.ItemEvent evt) {//GEN-FIRST:event_radStatusItemStateChanged
        if(evt.getStateChange() == ItemEvent.SELECTED) {
            this.comboStatus.setEnabled(true);
        } else if(evt.getStateChange() == ItemEvent.DESELECTED) {
            this.comboStatus.setEnabled(false);
        }
    }//GEN-LAST:event_radStatusItemStateChanged

    private void btnFilterActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnFilterActionPerformed
        if(isCleared()) {
            this.gridModel.setData(this.empcon.getAllEmp());
        } else if(this.txtName.isEnabled()) {
            String str = this.txtName.getText();
            this.gridModel.setData(this.empcon.getEmpByName(str));   
        } else if(this.comboPosition.isEnabled()) {
            int position = this.comboPosition.getSelectedIndex();
            this.gridModel.setData(this.empcon.getEmpByPosition(Integer.toString(position)));
        } else if(this.comboStatus.isEnabled()) {
            int status = this.comboStatus.getSelectedIndex();
            this.gridModel.setData(this.empcon.getEmpByStatus(Integer.toString(status)));
        }
        setDataNotif(this.gridModel.getRowCount());
        this.gridModel.fireTableDataChanged();
    }//GEN-LAST:event_btnFilterActionPerformed

    private void btnResetActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnResetActionPerformed
        this.radGroup.clearSelection();
        this.txtName.setText("");
        this.comboPosition.setSelectedIndex(0);
        this.comboStatus.setSelectedIndex(0);
    }//GEN-LAST:event_btnResetActionPerformed

    private void btnChangeStatActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnChangeStatActionPerformed
        StringBuilder sb = new StringBuilder();
        String ttl;
        int type;
        if(this.empDataGrid.getSelectedRow()<0) {
            sb.append("Theres no data selected !");
            ttl = "LDS : Warning";
            type = JOptionPane.WARNING_MESSAGE;
        } else {
            String empId = getSelectedId();
            String stat = this.gridModel.getValueAt(empDataGrid.getSelectedRow(), 6).toString();
            String empstat;
            if(stat.equalsIgnoreCase("Active")) {
                empstat = "1";
            } else {
                empstat = "0";
            }
            if(this.empcon.updateStat(empId, empstat)) {
                sb.append("Status changed !");
                type = JOptionPane.INFORMATION_MESSAGE;
                ttl = "LDS : Information";
            } else {
                sb.append("Unable to change status.");
                type = JOptionPane.ERROR_MESSAGE;
                ttl = "LDS : Error";
            }
            this.btnFilterActionPerformed(evt);
        }
        this.main.userDialog(sb, ttl, type);
    }//GEN-LAST:event_btnChangeStatActionPerformed

    private void btnAddActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnAddActionPerformed
        AddEmpFrm frm = new AddEmpFrm(this.main, true);
        setDialog(frm);
        this.btnFilterActionPerformed(evt);
    }//GEN-LAST:event_btnAddActionPerformed

    private void btnDeleteRowActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnDeleteRowActionPerformed
        StringBuilder sb = new StringBuilder();
        String ttl = "";
        int type = 0;
        if(this.empDataGrid.getSelectedRow()<0) {
            sb.append("Theres no data selected !");
            ttl = "LDS : Warning";
            type = JOptionPane.WARNING_MESSAGE;
        } else {
            int i = this.main.confPrompt("Are you sure you want to delete this employee?");
            if(i == JOptionPane.YES_OPTION) {
                int admin = new Integer(this.getSelectedAdmin());
                if(admin > 0) {
                    int j = this.main.confPrompt(
                        "This Employee is listed on the Administrative account ownership list. \n" +
                        "If you delete this Employee, the existing account will also be erased. \n" +
                        "Do you still want to delete this Employee ?"
                    );
                    if(j == JOptionPane.YES_OPTION) {
                        boolean delAdm = this.admcon.deleteAdmin(admin);
                        boolean delEmp = this.empcon.deleteEmp(this.getSelectedId());
                        if(delAdm && delEmp) {
                            sb.append("Selected employee deleted !");
                            type = JOptionPane.INFORMATION_MESSAGE;
                            ttl = "LDS : Information";
                            this.btnFilterActionPerformed(evt);
                        } else {
                            sb.append("Unable to delete selected employee.");
                            type = JOptionPane.ERROR_MESSAGE;
                            ttl = "LDS : Error";
                        }
                    }
                } else {
                    if(this.empcon.deleteEmp(this.getSelectedId())) {
                        sb.append("Selected employee deleted !");
                        type = JOptionPane.INFORMATION_MESSAGE;
                        ttl = "LDS : Information";
                        this.btnFilterActionPerformed(evt);
                    } else {
                        sb.append("Unable to delete selected employee.");
                        type = JOptionPane.ERROR_MESSAGE;
                        ttl = "LDS : Error";
                    }
                }
            }
        }
        this.main.userDialog(sb, ttl, type);
    }//GEN-LAST:event_btnDeleteRowActionPerformed

    private void btnPrntPdfActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnPrntPdfActionPerformed
        this.print = new Print("Employees");
        this.print.printPDF(this.empDataGrid);
    }//GEN-LAST:event_btnPrntPdfActionPerformed

    private void btnChangePosActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnChangePosActionPerformed
        int position = this.comboNewPosition.getSelectedIndex();
        StringBuilder sb = new StringBuilder();
        String ttl;
        int type;
        if(this.empDataGrid.getSelectedRow()<0) {
            sb.append("Theres no data selected !");
            ttl = "LDS : Warning";
            type = JOptionPane.WARNING_MESSAGE;
        } else {
            if(this.empcon.updatePosition(this.getSelectedId(), Integer.toString(position))) {
                sb.append("Position changed !");
                ttl = "LDS : Information";
                type = JOptionPane.INFORMATION_MESSAGE;
                this.comboNewPosition.setSelectedIndex(0);
                this.btnFilterActionPerformed(evt);
            } else {
                sb.append("Unable to change position.");
                ttl = "LDS : Error";
                type = JOptionPane.ERROR_MESSAGE;
            }
        }
        this.main.userDialog(sb, ttl, type);
    }//GEN-LAST:event_btnChangePosActionPerformed

    private void btnPrntXlsActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnPrntXlsActionPerformed
        this.print = new Print("Employees");
        this.print.printXLS(this.empDataGrid);
    }//GEN-LAST:event_btnPrntXlsActionPerformed

    private void btnMkAdminActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnMkAdminActionPerformed
        StringBuilder sb = new StringBuilder();
        String ttl;
        int type;
        if(this.empDataGrid.getSelectedRow()<0) {
            sb.append("Theres no data selected !");
            ttl = "LDS : Warning";
            type = JOptionPane.WARNING_MESSAGE;
            this.main.userDialog(sb, ttl, type);
        } else { 
            int admin = new Integer(this.getSelectedAdmin());
            if(admin > 0) {
                sb.append("This Employee already have an Admin account !");
                ttl = "LDS : Warning";
                type = JOptionPane.WARNING_MESSAGE;
                this.main.userDialog(sb, ttl, type);
            } else {
                int id = new Integer(this.getSelectedId());
                AddAdmFrm frm = new AddAdmFrm(this.main, true, id);
                this.setDialog(frm);
                this.btnFilterActionPerformed(evt);
            }
        }
    }//GEN-LAST:event_btnMkAdminActionPerformed


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnAdd;
    private javax.swing.JButton btnChangePos;
    private javax.swing.JButton btnChangeStat;
    private javax.swing.JButton btnDeleteRow;
    private javax.swing.JButton btnFilter;
    private javax.swing.JButton btnMkAdmin;
    private javax.swing.JButton btnPrntPdf;
    private javax.swing.JButton btnPrntXls;
    private javax.swing.JButton btnReset;
    private javax.swing.JComboBox<String> comboNewPosition;
    private javax.swing.JComboBox<String> comboPosition;
    private javax.swing.JComboBox<String> comboStatus;
    private javax.swing.JLabel dataNotif;
    private javax.swing.JTable empDataGrid;
    private javax.swing.JLabel jLabel10;
    private javax.swing.JLabel jLabel11;
    private javax.swing.JLabel jLabel9;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JSeparator jSeparator1;
    private javax.swing.ButtonGroup radGroup;
    private javax.swing.JRadioButton radName;
    private javax.swing.JRadioButton radPosition;
    private javax.swing.JRadioButton radStatus;
    private javax.swing.JTextField txtName;
    // End of variables declaration//GEN-END:variables
}
